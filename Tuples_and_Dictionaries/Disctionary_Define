The dictionary is another Python data structure.
It's not a sequence type (but can be easily adapted to sequence processing) and it is mutable.

To explain what the Python dictionary actually is, it is important to understand that it is literally a dictionary.

Dictionary:
=> prefer to use curly brackets {}
=> It is mutable
=> They don't preserve the order of their data, as the order is completely meaningless

Dictionary = {"Key" = "Value"}
=> For each element is defined as Key and it's value under the dictionary

For Example:
dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}
phone_numbers = {'boss': 5551234567, 'Suzy': 22657854310}
empty_dictionary = {}


#######################################
This means that a dictionary is a set of key-value pairs.

Note:
=> Each key must be unique − it's not possible to have more than one key of the same value;
=> A key may be any immutable type of object: it can be a number (integer or float), or even a string, but not a list;
=> A dictionary is not a list − a list contains a set of numbered values, while a dictionary holds pairs of values;
=> The len() function works for dictionaries, too − it returns the number of key-value elements in the dictionary;
=> A dictionary is a one-way tool − if you have an English-French dictionary, you can look for French equivalents of English terms, but not vice versa.

Note:
 In Python 3.6x dictionaries have become ordered collections by default. Your results may vary depending on what Python version you're using
