If you notice some similarities to the if instruction, that's quite all right. Indeed, the syntactic difference is only one: you use the word while instead of the word if.

The semantic difference is more important: when the condition is met, if performs its statements only once;
while repeats the execution as long as the condition evaluates to True.
============================================
Look at the algorithm below:

while conditional_expression:
    instruction_one
    instruction_two
    instruction_three
    :
    :
    instruction_n
============================================
* if you want to execute more than one statement inside one while loop, you must (as with if) indent all the instructions in the same way;
an instruction or set of instructions executed inside the while loop is called the loop's body;
* if the condition is False (equal to zero) as early as when it is tested for the first time,
the body is not executed even once (note the analogy of not having to do anything if there is nothing to do);
* the body should be able to change the condition's value, because if the condition is True at the beginning,
the body might run continuously to infinity â€“ notice that doing a thing usually decreases the number of things to do).